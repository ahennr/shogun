<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- This is the root application context configuration, which is declared in the web.xml.
		 The context of any servlet declared in the web.xml will inherit from this context.
		 http://syntx.co/languages-frameworks/difference-between-loading-context-via-dispatcherservlet-and-contextloaderlistener/
	-->

	<!-- Scans the classpath of this application for @Components to deploy as beans -->
	<context:component-scan base-package="de.terrestris">
		<!--  We exclude all Controllers here,
			  but access them in the child context of the shogun-servlet,
			  which will inherit all the stuff declared in the web.xml
			  root contextConfigLocation
		-->
		<context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
	</context:component-scan>

	<!-- enable post pre annotations -->
	<sec:global-method-security pre-post-annotations="enabled"/>

</beans>